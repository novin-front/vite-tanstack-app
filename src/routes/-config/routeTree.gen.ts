/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './../__root'
import { Route as IndexImport } from './../index'
import { Route as LocaleLoginRouteImport } from './../$locale/login/route'
import { Route as LocaleAboutRouteImport } from './../$locale/about/route'
import { Route as LocaleAuthRouteImport } from './../$locale/_auth/route'
import { Route as LocaleIndexRouteImport } from './../$locale/index/route'
import { Route as LocaleAuthProfileRouteImport } from './../$locale/_auth/profile/route'
import { Route as LocaleAuthDashboardRouteImport } from './../$locale/_auth/dashboard/route'

// Create Virtual Routes

const LocaleImport = createFileRoute('/$locale')()

// Create/Update Routes

const LocaleRoute = LocaleImport.update({
  id: '/$locale',
  path: '/$locale',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LocaleLoginRouteRoute = LocaleLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => LocaleRoute,
} as any).lazy(() =>
  import('./../$locale/login/route.lazy').then((d) => d.Route),
)

const LocaleAboutRouteRoute = LocaleAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LocaleRoute,
} as any).lazy(() =>
  import('./../$locale/about/route.lazy').then((d) => d.Route),
)

const LocaleAuthRouteRoute = LocaleAuthRouteImport.update({
  id: '/$locale/_auth',
  getParentRoute: () => LocaleRoute,
} as any)

const LocaleIndexRouteRoute = LocaleIndexRouteImport.update({
  id: '/$locale/',
  path: '/$locale/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./../$locale/index/route.lazy').then((d) => d.Route),
)

const LocaleAuthProfileRouteRoute = LocaleAuthProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LocaleAuthRouteRoute,
} as any).lazy(() =>
  import('./../$locale/_auth/profile/route.lazy').then((d) => d.Route),
)

const LocaleAuthDashboardRouteRoute = LocaleAuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => LocaleAuthRouteRoute,
} as any).lazy(() =>
  import('./../$locale/_auth/dashboard/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/$locale/': {
      id: '/$locale/'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleIndexRouteImport
      parentRoute: typeof rootRoute
    }
    '/$locale': {
      id: '/$locale'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleImport
      parentRoute: typeof rootRoute
    }
    '/$locale/_auth': {
      id: '/$locale/_auth'
      path: '/$locale'
      fullPath: '/$locale'
      preLoaderRoute: typeof LocaleAuthRouteImport
      parentRoute: typeof LocaleRoute
    }
    '/$locale/about': {
      id: '/$locale/about'
      path: '/about'
      fullPath: '/$locale/about'
      preLoaderRoute: typeof LocaleAboutRouteImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/login': {
      id: '/$locale/login'
      path: '/login'
      fullPath: '/$locale/login'
      preLoaderRoute: typeof LocaleLoginRouteImport
      parentRoute: typeof LocaleImport
    }
    '/$locale/_auth/dashboard': {
      id: '/$locale/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/$locale/dashboard'
      preLoaderRoute: typeof LocaleAuthDashboardRouteImport
      parentRoute: typeof LocaleAuthRouteImport
    }
    '/$locale/_auth/profile': {
      id: '/$locale/_auth/profile'
      path: '/profile'
      fullPath: '/$locale/profile'
      preLoaderRoute: typeof LocaleAuthProfileRouteImport
      parentRoute: typeof LocaleAuthRouteImport
    }
  }
}

// Create and export the route tree

interface LocaleAuthRouteRouteChildren {
  LocaleAuthDashboardRouteRoute: typeof LocaleAuthDashboardRouteRoute
  LocaleAuthProfileRouteRoute: typeof LocaleAuthProfileRouteRoute
}

const LocaleAuthRouteRouteChildren: LocaleAuthRouteRouteChildren = {
  LocaleAuthDashboardRouteRoute: LocaleAuthDashboardRouteRoute,
  LocaleAuthProfileRouteRoute: LocaleAuthProfileRouteRoute,
}

const LocaleAuthRouteRouteWithChildren = LocaleAuthRouteRoute._addFileChildren(
  LocaleAuthRouteRouteChildren,
)

interface LocaleRouteChildren {
  LocaleAuthRouteRoute: typeof LocaleAuthRouteRouteWithChildren
  LocaleAboutRouteRoute: typeof LocaleAboutRouteRoute
  LocaleLoginRouteRoute: typeof LocaleLoginRouteRoute
}

const LocaleRouteChildren: LocaleRouteChildren = {
  LocaleAuthRouteRoute: LocaleAuthRouteRouteWithChildren,
  LocaleAboutRouteRoute: LocaleAboutRouteRoute,
  LocaleLoginRouteRoute: LocaleLoginRouteRoute,
}

const LocaleRouteWithChildren =
  LocaleRoute._addFileChildren(LocaleRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleAuthRouteRouteWithChildren
  '/$locale/about': typeof LocaleAboutRouteRoute
  '/$locale/login': typeof LocaleLoginRouteRoute
  '/$locale/dashboard': typeof LocaleAuthDashboardRouteRoute
  '/$locale/profile': typeof LocaleAuthProfileRouteRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$locale': typeof LocaleAuthRouteRouteWithChildren
  '/$locale/about': typeof LocaleAboutRouteRoute
  '/$locale/login': typeof LocaleLoginRouteRoute
  '/$locale/dashboard': typeof LocaleAuthDashboardRouteRoute
  '/$locale/profile': typeof LocaleAuthProfileRouteRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/$locale/': typeof LocaleIndexRouteRoute
  '/$locale': typeof LocaleRouteWithChildren
  '/$locale/_auth': typeof LocaleAuthRouteRouteWithChildren
  '/$locale/about': typeof LocaleAboutRouteRoute
  '/$locale/login': typeof LocaleLoginRouteRoute
  '/$locale/_auth/dashboard': typeof LocaleAuthDashboardRouteRoute
  '/$locale/_auth/profile': typeof LocaleAuthProfileRouteRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$locale'
    | '/$locale/about'
    | '/$locale/login'
    | '/$locale/dashboard'
    | '/$locale/profile'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$locale'
    | '/$locale/about'
    | '/$locale/login'
    | '/$locale/dashboard'
    | '/$locale/profile'
  id:
    | '__root__'
    | '/'
    | '/$locale/'
    | '/$locale'
    | '/$locale/_auth'
    | '/$locale/about'
    | '/$locale/login'
    | '/$locale/_auth/dashboard'
    | '/$locale/_auth/profile'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LocaleIndexRouteRoute: typeof LocaleIndexRouteRoute
  LocaleRoute: typeof LocaleRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LocaleIndexRouteRoute: LocaleIndexRouteRoute,
  LocaleRoute: LocaleRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/$locale/",
        "/$locale"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/$locale/": {
      "filePath": "$locale/index/route.tsx"
    },
    "/$locale": {
      "filePath": "$locale/_auth",
      "children": [
        "/$locale/_auth",
        "/$locale/about",
        "/$locale/login"
      ]
    },
    "/$locale/_auth": {
      "filePath": "$locale/_auth/route.tsx",
      "parent": "/$locale",
      "children": [
        "/$locale/_auth/dashboard",
        "/$locale/_auth/profile"
      ]
    },
    "/$locale/about": {
      "filePath": "$locale/about/route.tsx",
      "parent": "/$locale"
    },
    "/$locale/login": {
      "filePath": "$locale/login/route.tsx",
      "parent": "/$locale"
    },
    "/$locale/_auth/dashboard": {
      "filePath": "$locale/_auth/dashboard/route.tsx",
      "parent": "/$locale/_auth"
    },
    "/$locale/_auth/profile": {
      "filePath": "$locale/_auth/profile/route.tsx",
      "parent": "/$locale/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
